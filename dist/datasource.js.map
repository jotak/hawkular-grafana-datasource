{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.tenant = instanceSettings.jsonData.tenant;\n    this.token = instanceSettings.jsonData.token;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.queryFunc = this.selectQueryFunc();\n  }\n\n  query(options) {\n    var targets = _.chain(options.targets)\n      .filter(target => !target.hide)\n      .filter(target => target.target !== 'select metric')\n      .value();\n\n    if (targets.length == 0) {\n      return this.q.when({data: []});\n    }\n\n    var start = options.range.from.valueOf();\n    var end = options.range.to.valueOf();\n\n    var promises = _.map(targets, target => this.queryFunc.then(func => func.call(this, target, start, end)));\n\n    return this.q.all(promises).then(result => {\n      return {data: result};\n    });\n  }\n\n  getData(target, start, end) {\n    var uri = [];\n    uri.push(target.type + 's'); // gauges or counters\n    uri.push(target.rate ? 'rate' : 'raw'); // raw or rate\n    uri.push('query');\n\n    var url = this.url + '/' + uri.join('/');\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      data: {\n        ids: [target.target],\n        start: start,\n        end: end\n      },\n      method: 'POST',\n      headers: this.createHeaders()\n    }).then(response => {\n      var datapoints;\n      if (response.data.length != 0) {\n        datapoints = _.map(response.data[0].data, point => [point.value, point.timestamp]);\n      } else {\n        datapoints = [];\n      }\n      return {\n        refId: target.refId,\n        target: target.target,\n        datapoints: datapoints\n      };\n    });\n  }\n\n  getDataLegacy(target, start, end) {\n    var uri = [];\n    uri.push(target.type + 's'); // gauges or counters\n    uri.push(encodeURIComponent(target.target).replace('+', '%20')); // metric name\n    uri.push('data');\n\n    var url = this.url + '/' + uri.join('/');\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      params: {\n        start: start,\n        end: end\n      },\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(response => {\n      var datapoints;\n      if (!target.rate) {\n        datapoints = _.map(response.data, point => [point.value, point.timestamp]);\n      } else {\n        var sortedData = response.data.sort((p1, p2)=> p1.timestamp - p2.timestamp);\n        datapoints = _.chain(sortedData)\n          .zip(sortedData.slice(1))\n          .filter(pair => {\n            return pair[1] // Exclude the last pair\n              && (target.type == 'gauge' || pair[0].value <= pair[1].value); // Exclude counter resets\n          })\n          .map(pair => {\n            var point1 = pair[0], point2 = pair[1];\n            var timestamp = point2.timestamp;\n            var value_diff = point2.value - point1.value;\n            var time_diff = point2.timestamp - point1.timestamp;\n            var rate = 60000 * value_diff / time_diff;\n            return [rate, timestamp];\n          })\n          .value();\n      }\n      return {\n        refId: target.refId,\n        target: target.target,\n        datapoints: datapoints\n      };\n    });\n  }\n\n  createHeaders() {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Hawkular-Tenant': this.tenant\n    };\n    if (typeof this.token === 'string' && this.token.length > 0) {\n      headers.Authorization = 'Bearer ' + this.token;\n    }\n    return headers;\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: options\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics',\n      params: {type: options.type},\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      return _.map(result.data, metric => {\n        return {text: metric.id, value: metric.id};\n      });\n    });\n  }\n\n  selectQueryFunc() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    }).then(response => {\n      var version = response.data['Implementation-Version'];\n      var regExp = new RegExp('([0-9]+)\\.([0-9]+)\\.(.+)');\n      if (version.match(regExp)) {\n        var versionInfo = regExp.exec(version);\n        var major = versionInfo[1];\n        var minor = versionInfo[2];\n        if (major == 0) {\n          if (minor < 17) {\n            return this.getDataLegacy;\n          }\n        }\n      }\n      return this.getData;\n    }).catch(response => this.getData);\n  }\n}\n"]}