{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","type","url","name","tenant","jsonData","token","q","queryFunc","selectQueryFunc","options","targets","chain","filter","target","hide","value","length","when","data","start","range","from","valueOf","end","to","promises","map","then","func","call","all","result","uri","push","rate","join","datasourceRequest","ids","method","headers","createHeaders","datapoints","response","point","timestamp","refId","encodeURIComponent","replace","params","sortedData","sort","p1","p2","zip","slice","pair","point1","point2","value_diff","time_diff","Authorization","status","message","title","text","metric","id","version","regExp","RegExp","match","versionInfo","exec","major","minor","getDataLegacy","getData","catch"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.tenant = instanceSettings.jsonData.tenant;\n    this.token = instanceSettings.jsonData.token;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.queryFunc = this.selectQueryFunc();\n  }\n\n  query(options) {\n    var targets = _.chain(options.targets)\n      .filter(target => !target.hide)\n      .filter(target => target.target !== 'select metric')\n      .value();\n\n    if (targets.length == 0) {\n      return this.q.when({data: []});\n    }\n\n    var start = options.range.from.valueOf();\n    var end = options.range.to.valueOf();\n\n    var promises = _.map(targets, target => this.queryFunc.then(func => func.call(this, target, start, end)));\n\n    return this.q.all(promises).then(result => {\n      return {data: result};\n    });\n  }\n\n  getData(target, start, end) {\n    var uri = [];\n    uri.push(target.type + 's'); // gauges or counters\n    uri.push(target.rate ? 'rate' : 'raw'); // raw or rate\n    uri.push('query');\n\n    var url = this.url + '/' + uri.join('/');\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      data: {\n        ids: [target.target],\n        start: start,\n        end: end\n      },\n      method: 'POST',\n      headers: this.createHeaders()\n    }).then(response => {\n      var datapoints;\n      if (response.data.length != 0) {\n        datapoints = _.map(response.data[0].data, point => [point.value, point.timestamp]);\n      } else {\n        datapoints = [];\n      }\n      return {\n        refId: target.refId,\n        target: target.target,\n        datapoints: datapoints\n      };\n    });\n  }\n\n  getDataLegacy(target, start, end) {\n    var uri = [];\n    uri.push(target.type + 's'); // gauges or counters\n    uri.push(encodeURIComponent(target.target).replace('+', '%20')); // metric name\n    uri.push('data');\n\n    var url = this.url + '/' + uri.join('/');\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      params: {\n        start: start,\n        end: end\n      },\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(response => {\n      var datapoints;\n      if (!target.rate) {\n        datapoints = _.map(response.data, point => [point.value, point.timestamp]);\n      } else {\n        var sortedData = response.data.sort((p1, p2)=> p1.timestamp - p2.timestamp);\n        datapoints = _.chain(sortedData)\n          .zip(sortedData.slice(1))\n          .filter(pair => {\n            return pair[1] // Exclude the last pair\n              && (target.type == 'gauge' || pair[0].value <= pair[1].value); // Exclude counter resets\n          })\n          .map(pair => {\n            var point1 = pair[0], point2 = pair[1];\n            var timestamp = point2.timestamp;\n            var value_diff = point2.value - point1.value;\n            var time_diff = point2.timestamp - point1.timestamp;\n            var rate = 60000 * value_diff / time_diff;\n            return [rate, timestamp];\n          })\n          .value();\n      }\n      return {\n        refId: target.refId,\n        target: target.target,\n        datapoints: datapoints\n      };\n    });\n  }\n\n  createHeaders() {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Hawkular-Tenant': this.tenant\n    };\n    if (typeof this.token === 'string' && this.token.length > 0) {\n      headers.Authorization = 'Bearer ' + this.token;\n    }\n    return headers;\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: options\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics',\n      params: {type: options.type},\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      return _.map(result.data, metric => {\n        return {text: metric.id, value: metric.id};\n      });\n    });\n  }\n\n  selectQueryFunc() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    }).then(response => {\n      var version = response.data['Implementation-Version'];\n      var regExp = new RegExp('([0-9]+)\\.([0-9]+)\\.(.+)');\n      if (version.match(regExp)) {\n        var versionInfo = regExp.exec(version);\n        var major = versionInfo[1];\n        var minor = versionInfo[2];\n        if (major == 0) {\n          if (minor < 17) {\n            return this.getDataLegacy;\n          }\n        }\n      }\n      return this.getData;\n    }).catch(response => this.getData);\n  }\n}\n"]}