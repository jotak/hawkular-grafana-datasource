{"version":3,"sources":["../../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.tenant = instanceSettings.jsonData.tenant;\n    this.token = instanceSettings.jsonData.token;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.queryFunc = this.selectQueryFunc();\n  }\n\n  query(options) {\n    var targets = _.chain(options.targets)\n      .filter(target => !target.hide)\n      .filter(target => target.target !== 'select metric')\n      .value();\n\n    if (targets.length == 0) {\n      return this.q.when({data: []});\n    }\n\n    var start = options.range.from.valueOf();\n    var end = options.range.to.valueOf();\n\n    var promises = _.map(targets, target => this.queryFunc.then(func => func.call(this, target, start, end)));\n\n    return this.q.all(promises).then(result => {\n      return {data: result};\n    });\n  }\n\n  getData(target, start, end) {\n    var uri = [];\n    uri.push(target.type + 's'); // gauges or counters\n    uri.push(target.rate ? 'rate' : 'raw'); // raw or rate\n    uri.push('query');\n\n    var url = this.url + '/' + uri.join('/');\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      data: {\n        ids: [target.target],\n        start: start,\n        end: end\n      },\n      method: 'POST',\n      headers: this.createHeaders()\n    }).then(response => {\n      var datapoints;\n      if (response.data.length != 0) {\n        datapoints = _.map(response.data[0].data, point => [point.value, point.timestamp]);\n      } else {\n        datapoints = [];\n      }\n      return {\n        refId: target.refId,\n        target: target.target,\n        datapoints: datapoints\n      };\n    });\n  }\n\n  getDataLegacy(target, start, end) {\n    var uri = [];\n    uri.push(target.type + 's'); // gauges or counters\n    uri.push(encodeURIComponent(target.target).replace('+', '%20')); // metric name\n    uri.push('data');\n\n    var url = this.url + '/' + uri.join('/');\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      params: {\n        start: start,\n        end: end\n      },\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(response => {\n      var datapoints;\n      if (!target.rate) {\n        datapoints = _.map(response.data, point => [point.value, point.timestamp]);\n      } else {\n        var sortedData = response.data.sort((p1, p2)=> p1.timestamp - p2.timestamp);\n        datapoints = _.chain(sortedData)\n          .zip(sortedData.slice(1))\n          .filter(pair => {\n            return pair[1] // Exclude the last pair\n              && (target.type == 'gauge' || pair[0].value <= pair[1].value); // Exclude counter resets\n          })\n          .map(pair => {\n            var point1 = pair[0], point2 = pair[1];\n            var timestamp = point2.timestamp;\n            var value_diff = point2.value - point1.value;\n            var time_diff = point2.timestamp - point1.timestamp;\n            var rate = 60000 * value_diff / time_diff;\n            return [rate, timestamp];\n          })\n          .value();\n      }\n      return {\n        refId: target.refId,\n        target: target.target,\n        datapoints: datapoints\n      };\n    });\n  }\n\n  createHeaders() {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Hawkular-Tenant': this.tenant\n    };\n    if (typeof this.token === 'string' && this.token.length > 0) {\n      headers.Authorization = 'Bearer ' + this.token;\n    }\n    return headers;\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: options\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(options) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics',\n      params: {type: options.type},\n      method: 'GET',\n      headers: this.createHeaders()\n    }).then(result => {\n      return _.map(result.data, metric => {\n        return {text: metric.id, value: metric.id};\n      });\n    });\n  }\n\n  selectQueryFunc() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    }).then(response => {\n      var version = response.data['Implementation-Version'];\n      var regExp = new RegExp('([0-9]+)\\.([0-9]+)\\.(.+)');\n      if (version.match(regExp)) {\n        var versionInfo = regExp.exec(version);\n        var major = versionInfo[1];\n        var minor = versionInfo[2];\n        if (major == 0) {\n          if (minor < 17) {\n            return this.getDataLegacy;\n          }\n        }\n      }\n      return this.getData;\n    }).catch(response => this.getData);\n  }\n}\n"]}